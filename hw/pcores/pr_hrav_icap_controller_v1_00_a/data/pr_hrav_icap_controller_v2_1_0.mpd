##############################################################################
## Filename:          /media/dung/anhqvn/FPGA11/contrib-projects/hrav_framework_b_finall3/hw/pcores/pr_hrav_icap_controller_v1_00_a/data/pr_hrav_icap_controller_v2_1_0.mpd
## Description:       Microprocessor Peripheral Description
## Date:              Sun Feb  8 16:10:42 2015 (by Create and Import Peripheral Wizard)
##############################################################################

BEGIN pr_hrav_icap_controller

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VERILOG
## Bus Interfaces
BUS_INTERFACE BUS=M_AXIS, BUS_STD=AXIS, BUS_TYPE=INITIATOR
BUS_INTERFACE BUS=S_AXIS, BUS_STD=AXIS, BUS_TYPE=TARGET
BUS_INTERFACE BUS=S_AXI, BUS_STD=AXI, BUS_TYPE=SLAVE

## Parameters
PARAMETER C_S_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = S_AXIS
PARAMETER C_S_AXIS_DATA_WIDTH = 64, DT = INTEGER, RANGE = (8,32,64,256), BUS = S_AXIS

PARAMETER C_M_AXIS_PROTOCOL = GENERIC, DT = string, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, BUS = M_AXIS
PARAMETER C_M_AXIS_DATA_WIDTH = 64, DT = INTEGER, RANGE = (8,32,64,256), BUS = M_AXIS

PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, BUS = S_AXI, DT = STRING, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector(31 downto 0), ADDRESS = BASE, PAIR = C_HIGHADDR, BUS = S_AXI, MIN_SIZE = 0x01000, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(31 downto 0), ADDRESS = HIGH, PAIR = C_BASEADDR, BUS = S_AXI, ASSIGNMENT = REQUIRE
PARAMETER USER_MAGIC_CODE = 0xaecafe, DT = std_logic_vector(23 downto 0) 


## Peripheral ports
PORT ACLK = "", DIR=I, SIGIS=CLK, BUS=M_AXIS:S_AXIS, ASSIGNMENT = REQUIRE
PORT ICAP_clk  = "", DIR=I, SIGIS=CLK, ASSIGNMENT = REQUIRE
PORT RESETN = "", DIR=I, SIGIS=RST, ASSIGNMENT = REQUIRE
PORT RESET  = "", DIR=I, SIGIS=RST, ASSIGNMENT = REQUIRE
PORT core_0_enb = "", DIR=O, ASSIGNMENT = REQUIRE
PORT core_1_enb = "", DIR=O, ASSIGNMENT = REQUIRE
PORT core_0_reset = "", DIR=O, ASSIGNMENT = REQUIRE
PORT core_1_reset = "", DIR=O, ASSIGNMENT = REQUIRE
#PORT core_sync_reset = "", DIR=O, ASSIGNMENT = REQUIRE
PORT core_sync_reset = "", DIR=O
PORT core_sync_reset_n = "", DIR=O, ASSIGNMENT = REQUIRE
PORT hrav_0_axis_lp = "", DIR=O
PORT hrav_1_axis_lp = "", DIR=O



## slave interface
PORT S_AXIS_TREADY = TREADY, DIR=O, BUS=S_AXIS
PORT S_AXIS_TDATA = TDATA, DIR=I, VEC=[C_S_AXIS_DATA_WIDTH-1:0], BUS=S_AXIS
PORT S_AXIS_TSTRB = TSTRB, DIR = I, VEC = [C_S_AXIS_DATA_WIDTH/8-1:0], BUS = S_AXIS
PORT S_AXIS_TUSER = TUSER, DIR = I, VEC = [127:0], BUS = S_AXIS
PORT S_AXIS_TLAST = TLAST, DIR=I, BUS=S_AXIS
PORT S_AXIS_TVALID = TVALID, DIR=I, BUS=S_AXIS

## Master interface
PORT M_AXIS_TVALID = TVALID, DIR=O, BUS=M_AXIS
PORT M_AXIS_TDATA = TDATA, DIR=O, VEC=[C_M_AXIS_DATA_WIDTH-1:0], BUS=M_AXIS
PORT M_AXIS_TSTRB = TSTRB, DIR = O, VEC = [C_M_AXIS_DATA_WIDTH/8-1:0], BUS = M_AXIS
PORT M_AXIS_TUSER = TUSER, DIR = O, VEC = [127:0], BUS = M_AXIS
PORT M_AXIS_TLAST = TLAST, DIR=O, BUS = M_AXIS
PORT M_AXIS_TREADY = TREADY, DIR=I, BUS = M_AXIS

## Connect AXI slave for testing
PORT S_AXI_ACLK = "", DIR = I, SIGIS = CLK, BUS = S_AXI, ASSIGNMENT = REQUIRE
PORT S_AXI_ARESETN = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI
PORT S_AXI_AWADDR = AWADDR, DIR = I, VEC = [31:0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_AWVALID = AWVALID, DIR = I, BUS = S_AXI
PORT S_AXI_AWREADY = AWREADY, DIR = O, BUS = S_AXI
PORT S_AXI_WDATA = WDATA, DIR = I, VEC = [31:0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WSTRB = WSTRB, DIR = I, VEC = [3:0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WVALID = WVALID, DIR = I, BUS = S_AXI
PORT S_AXI_WREADY = WREADY, DIR = O, BUS = S_AXI
PORT S_AXI_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_BVALID = BVALID, DIR = O, BUS = S_AXI
PORT S_AXI_BREADY = BREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARADDR = ARADDR, DIR = I, VEC = [31:0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_ARVALID = ARVALID, DIR = I, BUS = S_AXI
PORT S_AXI_ARREADY = ARREADY, DIR = O, BUS = S_AXI
PORT S_AXI_RDATA = RDATA, DIR = O, VEC = [31:0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_RVALID = RVALID, DIR = O, BUS = S_AXI
PORT S_AXI_RREADY = RREADY, DIR = I, BUS = S_AXI

END
